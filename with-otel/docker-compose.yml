version: "3.9"

services:
  firstapp:
    build:
      context: ../dummy-app
      dockerfile: ./Dockerfile
      args:
        - JAVA_AGENT_VERSION=${JAVA_AGENT_VERSION}
    image: with-otel_firstapp_1
    ports:
      - "8091:8080"
    environment:
      - ELASTIC_APM_SERVICE_NAME=first-java-app
      - ELASTIC_APM_SERVER_URLS
      - ELASTIC_APM_SECRET_TOKEN
      - ELASTIC_APM_USE_ELASTIC_TRACEPARENT_HEADER=false
      - CONFIG_DOWNSTREAM_SERVICE_URL=nginx
  dummyapp:
    build:
      context: ../dummy-app
      dockerfile: ./Dockerfile
      args:
        - JAVA_AGENT_VERSION=${JAVA_AGENT_VERSION}
    image: with-otel_dummyapp_1
    ports:
      - "8092:8080"
    environment:
      - ELASTIC_APM_SERVICE_NAME=dummy-java-app
      - ELASTIC_APM_SERVER_URLS
      - ELASTIC_APM_SECRET_TOKEN
      - ELASTIC_APM_USE_ELASTIC_TRACEPARENT_HEADER=false
      - CONFIG_DOWNSTREAM_SERVICE_URL=nginx
  nginx:
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    image: with-otel_nginx_1
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/otel.toml:/etc/otel.toml
    expose:
      - "8082"
    ports:
      - "8082:80"
    depends_on:
      - otel-collector

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.12.1
    ports:
      - "8200"
    volumes:
      - ./apm-server/apm-server.docker.yml:/usr/share/apm-server/apm-server.yml:ro
  # Collector
  otel-collector:
    image: otel/opentelemetry-collector-dev:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    depends_on:
      - apm-server
#  nginx:
#    image: nginx
#    volumes:
#      - ./templates:/etc/nginx/templates
#    ports:
#      - "8081:81"

#  db:
#    image: postgres
#    volumes:
#      - ./data/db:/var/lib/postgresql/data
#    environment:
#      - POSTGRES_DB=postgres
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#  web:
#    build: .
#    command: python manage.py runserver 0.0.0.0:8000
#    volumes:
#      - .:/code
#    ports:
#      - "8000:8000"
#    depends_on:
#      - db